@page "/verificarLocacoes"
@using Locadora_Ao_Infinito_E_Alem.Models
@using Locadora_Ao_Infinito_E_Alem.Controllers
@inject NavigationManager navegacao;
@inject LocacaoController locacaoController;
@inject FilmeController filmeController;

<div class="container">
    <h2 class="mt-4 text-start text-warning">Gerenciar Locações</h2>
    <br />

    <!-- Filtros de Pesquisa
    <div class="mb-3">
        <label for="filtroStatus" class="form-label">Filtrar por Status:</label>
        <select @bind="filtroStatus" class="form-select" id="filtroStatus">
            <option value="">Todos</option>
            <option value="Ativa">Ativa</option>
            <option value="Atrasada">Atrasada</option>
            <option value="Finalizada">Finalizada</option>
        </select>
    </div> -->

    <!-- Tabela de Locações -->
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ID Locação</th>
                <th>Cliente</th>
                <th>Filmes</th>
                <th>Valor Total da Locação</th>
                <th>Data locação</th>
                <th>Data devolução</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var locacao in locacoes)
            {
                <tr>

                    <td>@locacao.ID</td>
                    <td>@locacao.Cliente.nome </td>
                    <td>
                    @{
                        var valores = string.Join("; ", locacao.LocacaoFilmes.Select(f => f.Filme.titulo));
                    }
                     @valores
                    </td>
                    <td>@locacao.valor_total</td>
                    <td>@locacao.data_locacao</td>
                    <td>@locacao.data_devolucao</td>
                    <td>@locacao.Status</td>
                    @if (locacao.Status == "Ativa")
                    {
                    <td>
                        <button class="btn btn-success btn-sm" @onclick="() => DevolverFilmes(locacao.ID)">Marcar como Finalizada</button>
                    </td>
                    }
                    else
                    {
                      <td></td>  
                    }

                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private Locacao locacao = new Locacao();
    //private string filtroStatus = "";
    private List<Locacao> locacoes = new List<Locacao>(); // Supondo que esta lista seja preenchida com as locações do banco de dados.
    
    /*private List<Locacao> locacoesFiltradas => locacoes
        .Where(l => string.IsNullOrEmpty(filtroStatus) || l.Status == filtroStatus)
        .ToList();*/

    protected override async Task OnInitializedAsync()
    {
        locacoes = await locacaoController.ListarLocacoesComFilmes();
    }

    private async Task DevolverFilmes(int idLocacao)
    {
        var locacao = locacoes.FirstOrDefault(l => l.ID == idLocacao);
        if (locacao != null)
        {
            locacao.Status = "Finalizada";
            foreach(var item in locacao.LocacaoFilmes)
            {
                item.Filme.estoque = item.Filme.estoque + 1;
            }
            await locacaoController.SalvarAlteracoes();
            await filmeController.SalvarAlteracoes();
        }
        
    }

}
    