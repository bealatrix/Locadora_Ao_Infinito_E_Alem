@page "/cadastroFuncionario"
@using Locadora_Ao_Infinito_E_Alem.Controllers
@using Locadora_Ao_Infinito_E_Alem.Models
@inject FuncionarioController funcionarioController;
@inject NavigationManager navegacao;


<div class="container">
    <!-- Barra de navegação temática -->
    <nav class="navbar navbar-light" style="background-color: navy;">
        <span class="navbar-brand mb-0 h1 text-white">Locadora ao Infinito e Além</span>
    </nav>
    <!-- Formulário de Cadastro de Funcionario -->
    <h2 class="mt-4 text-center text-warning">Cadastro de Funcionário</h2>
    
    <!-- Mensagem de Sucesso -->
    @if (sucesso)
    {
        <div class="alert alert-success mt-3" role="alert">
            Funcionário salvo com sucesso!
        </div>
    } else
    {
        <div class="mb-3">
            <label for="nomeInput" class="form-label">Nome:</label>
            <input @bind="funcionario.nome" type="text" class="form-control" id="nomeInput">
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="dataNascimentoInput" class="form-label">Data de Nascimento:</label>
                    <input @bind="funcionario.data_nascimento" type="date" class="form-control" id="dataNascimentoInput">
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="salarioInput" class="form-label">Salário:</label>
                    <input @bind="funcionario.salario" type="number" class="form-control" id="salarioInput">
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="cpfInput" class="form-label">CPF:</label>
                    <input @bind="funcionario.cpf" type="text" class="form-control" id="cpfInput">
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="cpfInput" class="form-label">Telefone:</label>
                    <input @bind="funcionario.telefone" type="text" class="form-control" id="cpfInput">
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="rgInput" class="form-label">RG:</label>
                    <input @bind="funcionario.rg" type="text" class="form-control" id="rgInput">
                </div>
            </div>
        </div>
    }

    @if (erro)
    {
        <div class="alert alert-dark mt-3" role="alert">
            @texto
        </div>
    }

    <!-- Botões de Ação -->
    <div class="d-flex justify-content-center">
        <button type="button" class="btn btn-primary mt-3 mx-2" @onclick="cadastrarFuncionario" >Salvar</button>
        <button type="button" class="btn btn-secondary mt-3 mx-2" @onclick="novoRegistro" >Novo Registro</button>
    </div>
</div>

@code {
    private List<Funcionario>? listaFuncionarios = new List<Funcionario>();

    private Funcionario funcionario = new Funcionario();

    private bool sucesso = false;
    private string texto;
    private bool erro = false;

    protected override async Task OnInitializedAsync()
    {
        listaFuncionarios = await funcionarioController.ListarFuncionarios();
        sucesso = false;
        texto = "Alguns campos não foram preenchidos corretamente.";
        erro = false;
    }

    public async Task cadastrarFuncionario()
    {
        if (listaFuncionarios.FindIndex(x => x.cpf == funcionario.cpf) == 0)
        {
            erro = true;
            texto = "Já existe um funcionário cadastrado com este CPF.";
        } else
        {
            if (funcionario != null && funcionario.nome != null && funcionario.rg != null && funcionario.rg != "" && funcionario.cpf != null && funcionario.salario != null && funcionario.telefone != null)
            {
                await funcionarioController.CadastrarFuncionario(funcionario);
                await funcionarioController.SalvarAlteracoes();
                sucesso = true;
                erro = false;
            }
            else
            {
                erro = true;
            }
        }
    }

    public async Task novoRegistro()
    {
        navegacao.NavigateTo("/cadastroFuncionario", forceLoad: true);
    }
}
